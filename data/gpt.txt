
    model {

    ### Time: Likelihood
    for(i in 1:n.samples){
    log.time[i] ~ dnorm(log.time.hat[i], time.tau[combo.mat[bird.sp[i], tree.sp[i]]])
    log.time.hat[i] <- ft.overall.est + ft.bird.sp.est[bird.sp[i]] + ft.tree.sp.est[tree.sp[i]] + ft.bird.tree.sp.est[combo.mat[bird.sp[i], tree.sp[i]]] + ft.bird.id[bird.sp[i], nested.bird.id[i]]
    }


    ### Time: Priors

    # Overall effects (intercepts)

    ft.overall.est ~ dnorm(0, 0.01)


    # Bird species effects

    ft.bird.sp.est[1] <- 0
    for(i in 2:n.bird.sp){
    ft.bird.sp.est[i] ~ dnorm(0, ft.bird.sp.tau)
    }

    ft.bird.sp.tau <- pow(ft.bird.sp.sigma, -2)
    ft.bird.sp.sigma ~ dunif(0, 10)


    # Tree species effects

    ft.tree.sp.est[1] <- 0
    for(i in 2:n.tree.sp){
    ft.tree.sp.est[i] ~ dnorm(0, ft.tree.sp.tau)
    }

    ft.tree.sp.tau <- pow(ft.tree.sp.sigma, -2)
    ft.tree.sp.sigma ~ dunif(0, 10)

    # Interaction effects

    ft.bird.tree.sp.est[1] <- 0
    for(i in 2:n.all.int){
    ft.bird.tree.sp.est[i] ~ dnorm(0, ft.bird.tree.sp.tau)
    }

    ft.bird.tree.sp.tau <- pow(ft.bird.tree.sp.sigma, -2)
    ft.bird.tree.sp.sigma ~ dunif(0, 10)

    # Time tau.
    for(i in 1:n.all.int){
    time.tau[i] <- pow(time.sigma[i], -2)
    time.sigma.unabs[i] ~ dt(mu.time.sigma, mu.time.tau, 2) # Folded noncentral t following Gelman 2006
    time.sigma[i] <- abs(time.sigma.unabs[i])
    }
    mu.time.sigma ~ dunif(0, 10)
    mu.time.tau <- pow(mu.time.sigma.overall, -2)
    mu.time.sigma.overall ~ dunif(0,10)

    # Bird individual effects

    for(i in 1:n.bird.sp){
    for(j in 1:bird.id.nested.length[i]){
    ft.bird.id[i,j] ~ dnorm(0, ft.bird.id.tau[i])
    }
    ft.bird.id.tau[i] <- pow(ft.bird.id.sigma[i], -2)
    ft.bird.id.sigma[i] ~ dunif(0, 10)
    }



    ### Predictions
    for(i in 1:n.all.int){
    log.time.pred[all.int[i, 1], all.int[i, 2]] ~ dnorm(ft.overall.est + ft.bird.sp.est[all.int[i, 1]] + ft.tree.sp.est[all.int[i, 2]] + ft.bird.tree.sp.est[combo.mat[all.int[i, 1], all.int[i, 2]]], time.tau[combo.mat[all.int[i, 1], all.int[i, 2]]])
    }


    } # End of model

    
